version: 2.1

parameters:
  # This parameter is used to trigger the main workflow
  trigger:
    type: boolean
    default: true

  # A parameter per package
  preprocess:
    type: boolean
    default: false
  api:
    type: boolean
    default: false
  augmentation:
    type: boolean
    default: false


executors:
  node:
    docker:
      - image: circleci/python:3.7-node-browsers-legacy

jobs:
  trigger-workflows:
    executor: node
    steps:
      - checkout
      - run:
          name: Trigger workflows
          command: chmod +x .circleci/circle_trigger.sh && .circleci/circle_trigger.sh

  build:
    parameters:
      package_name:
        type: string

#    executor: node
    machine:
      image: ubuntu-1604:201903-01
    working_directory: ~/project/packages/<< parameters.package_name >>

    steps:
      - checkout:
          path: ~/project
      # This step is added only to show that we are in the package directory
      - run:
          name: Sanity check to confirm correct package directory
          command: echo "Current package directory is << parameters.package_name >> ..."
      - run:
          name: Setup Testing Environment
          command: |
            sudo pip install --upgrade pip
            sudo pip install -r requirements.txt
            python --version ; pip --version ; pwd ; ls
#      - run:
#          name: Run Tests
#          command: |
#            coverage run -m pytest
#            coverage report
#            coverage html  # open htmlcov/index.html in a browser
#      - store_artifacts:
#          path: htmlcov
      - persist_to_workspace:
          root: ~/project
          paths:
            - packages/<< parameters.package_name >>

  deploy:
    parameters:
      package_name:
        type: string
      package_version:
        type: string

#    executor: node
    machine:
      image: ubuntu-1604:201903-01
    working_directory: ~/project/packages/<< parameters.package_name >>

    steps:
      - attach_workspace:
          at: ~/project
      # This step is added to show that files are available from the build job.
      - run:
          name: Content to deploy
          command: ls
      - deploy:
          name: Build and Deploy Image
          command: |
            echo "Build << parameters.package_name >> ..."
            docker build --rm=false -t us.gcr.io/${GCP_PROJECT}/<< parameters.package_name >>:<< parameters.package_version >> .
            echo ${GOOGLE_AUTH} > ${HOME}/gcp-key.json
            gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
            gcloud --quiet config set project ${GCP_PROJECT}
            gcloud docker -- push us.gcr.io/${GCP_PROJECT}/<< parameters.package_name >>:<< parameters.package_version >>
      - run:
          name: Remove account details
          command: rm ${HOME}/gcp-key.json ; ls

workflows:
  version: 2

  # The main workflow responsible for triggering all other workflows
  # in which changes are detected.
  ci:
    when: << pipeline.parameters.trigger >>
    jobs:
      - trigger-workflows


  # Workflows defined for each package.
  preprocess:
    when: << pipeline.parameters.preprocess >>
    jobs:
      - build:
          name: preprocess-build
          package_name: preprocess
          package_version: 1.0.0
      - deploy:
          name: preprocess-deploy
          package_name: preprocess
          requires:
            - preprocess-build
          filters:
            branches:
              only:
                - dev

  api:
    when: << pipeline.parameters.api >>
    jobs:
      - build:
          name: api-build
          package_name: api
          package_version: 1.0.0
      - deploy:
          name: api-deploy
          package_name: api
          requires:
            - api-build
          filters:
            branches:
              only:
                - dev

  augmentation:
    when: << pipeline.parameters.augmentation >>
    jobs:
      - build:
          name: augmentation-build
          package_name: augmentation
          package_version: 1.0.0
      - deploy:
          name: augmentation-deploy
          package_name: augmentation
          requires:
            - augmentation-build
          filters:
            branches:
              only:
                - dev

